x-api-app: &api-app
  build:
    context: ./api
    args:
      RUBY_VERSION: "3.1"
  env_file:
    - .env
  environment: &api-env
    BUNDLE_PATH: /srv/ontoportal/bundle
    BUNDLE_APP_CONFIG: /srv/ontoportal/ontologies_api/.bundle
    COVERAGE: "true"
    OVERRIDE_CONFIG: "true"
    REST_URL_PREFIX: "http://api:9393"
    GOO_REDIS_HOST: redis-ut
    REDIS_GOO_CACHE_HOST: redis-ut
    REDIS_HTTP_CACHE_HOST: redis-ut
    REDIS_PERSISTENT_HOST: redis-ut
    REDIS_PORT: 6379
    REDIS_HOST: redis-ut
    ANNOTATOR_REDIS_HOST: redis-ut
    ANNOTATOR_REDIS_PORT: 6379
    SOLR_TERM_SEARCH_URL: http://solr-ut:8983/solr/term_search_core1
    SOLR_PROP_SEARCH_URL: http://solr-ut:8983/solr/prop_search_core1
    MGREP_HOST: mgrep-ut
    MGREP_PORT: 55556
  stdin_open: true
  command: "bundle exec unicorn -p 9393 -o 0.0.0.0"
  tty: true
  volumes:
    - api-bundle:/srv/ontoportal/bundle
    - ./api:/srv/ontoportal/ontologies_api
  depends_on: &api-depends-on
    solr-ut:
      condition: service_healthy
    redis-ut:
      condition: service_healthy
    mgrep-ut:
      condition: service_healthy

x-frontend-app: &frontend-app
  build:
    context: ./frontend
    args:
      RAILS_ENV: ${RAILS_ENV:-development}
      NODE_ENV: ${NODE_ENV:-development}
      BUNDLE_WITHOUT: ${BUNDLE_WITHOUT:-production test}
  env_file:
    - .env
  tty: true
  volumes:
    - frontend-bundle:/usr/local/bundle
    - node:/node_modules
    - rails_cache:/app/tmp/cache
    - assets:/app/public/assets
    - ./frontend:/app
  depends_on: &frontend-depends-on
    db:
      condition: service_healthy
    cache:
      condition: service_started
  environment: &frontend-env
    BUNDLE_WITHOUT: ""
    BUNDLE_PATH: /usr/local/bundle
    DB_HOST: db
    MEMCACHE_SERVERS: "cache:11211"
  tmpfs:
    - /tmp
    - /app/tmp/pids

services:
  # API Services
  api:
    <<: *api-app
    ports:
      - "9393:9393"
    environment:
      <<: *api-env
      GOO_BACKEND_NAME: 4store
      GOO_PORT: 9000
      GOO_HOST: 4store-ut
      GOO_PATH_QUERY: /sparql/
      GOO_PATH_DATA: /data/
      GOO_PATH_UPDATE: /update/
    profiles:
      - 4store
    depends_on:
      <<: *api-depends-on
      4store-ut:
        condition: service_started
    networks:
      - internal

  api-agraph:
    <<: *api-app
    ports:
      - "9393:9393"
    environment:
      <<: *api-env
      REST_URL_PREFIX: "http://api-agraph:9393/"
      GOO_BACKEND_NAME: ag
      GOO_PORT: 10035
      GOO_HOST: agraph-ut
      GOO_PATH_QUERY: /repositories/ontoportal_test
      GOO_PATH_DATA: /repositories/ontoportal_test/statements
      GOO_PATH_UPDATE: /repositories/ontoportal_test/statements
    profiles:
      - agraph
    depends_on:
      <<: *api-depends-on
      agraph-ut:
        condition: service_healthy
    networks:
      - internal

  # Frontend Services
  frontend-dev:
    <<: *frontend-app
    command: bash -c "yarn install && bundle install && ./bin/setup && ./bin/rails s -b 0.0.0.0"
    ports:
      - "3000:3000"
    environment:
      <<: *frontend-env
      RAILS_ENV: development
      API_URL: http://api:9393
    networks:
      - internal
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      <<: *frontend-depends-on
      frontend-node:
        condition: service_started
      api:
        condition: service_started
    profiles:
      - 4store

  frontend-dev-agraph:
    <<: *frontend-app
    command: bash -c "yarn install && bundle install && ./bin/setup && ./bin/rails s -b 0.0.0.0"
    ports:
      - "3000:3000"
    environment:
      <<: *frontend-env
      RAILS_ENV: development
      API_URL: http://api-agraph:9393
    networks:
      - internal
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      <<: *frontend-depends-on
      frontend-node:
        condition: service_started
      api-agraph:
        condition: service_started
    profiles:
      - agraph

  frontend-node:
    <<: *frontend-app
    command: bash -c "yarn install && yarn build --watch"
    networks:
      - internal

  frontend-test:
    <<: *frontend-app
    command: "./bin/rails console"
    environment:
      <<: *frontend-env
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_started
      chrome-server:
        condition: service_started
    networks:
      - internal
      - external

  # Shared Infrastructure Services
  redis-ut:
    image: redis
    ports:
      - "6379:6379"
      - "6380:6379"
      - "6381:6379"
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 3s
      retries: 10
    networks:
      - internal

  4store-ut:
    image: bde2020/4store
    platform: linux/amd64
    ports:
      - "8081:9000"
    command: >
      bash -c "4s-backend-setup --segments 4 ontoportal_kb
      && 4s-backend ontoportal_kb
      && 4s-httpd -D -s-1 -p 9000 ontoportal_kb"
    profiles:
      - 4store
    networks:
      - internal

  solr-ut:
    image: solr:8
    volumes:
      - ./api/test/solr/configsets:/configsets:ro
    ports:
      - "8983:8983"
    command: >
      bash -c "precreate-core term_search_core1 /configsets/term_search
      && precreate-core prop_search_core1 /configsets/property_search
      && solr-foreground"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'curl -sf http://localhost:8983/solr/term_search_core1/admin/ping?wt=json | grep -iq ''"status":"OK"}'' || exit 1',
        ]
      start_period: 5s
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - internal

  mgrep-ut:
    image: ontoportal/mgrep:0.0.2
    platform: linux/amd64
    healthcheck:
      test: ["CMD", "nc", "-z", "-v", "127.0.0.1", "55556"]
      start_period: 3s
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - internal

  agraph-ut:
    image: franzinc/agraph:v8.1.0
    platform: linux/amd64
    environment:
      - AGRAPH_SUPER_USER=test
      - AGRAPH_SUPER_PASSWORD=xyzzy
    shm_size: 1g
    command: >
      bash -c "/agraph/bin/agraph-control --config /agraph/etc/agraph.cfg start
      ; agtool repos create ontoportal_test
      ; agtool users add anonymous
      ; agtool users grant anonymous root:ontoportal_test:rw
      ; tail -f /agraph/data/agraph.log"
    healthcheck:
      test: ["CMD-SHELL", "agtool storage-report ontoportal_test || exit 1"]
      start_period: 30s
      interval: 20s
      timeout: 10s
      retries: 10
    profiles:
      - agraph
    networks:
      - internal

  db:
    image: "mysql:8.0"
    networks:
      - internal
    ports:
      - "3306:3306"
    environment:
      MYSQL_USER: ${MYSQL_USER:-bp_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-changeme}
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD:-changeme}
      MYSQL_DATABASE: bioportal_ui_development
    volumes:
      - mysql-data:/var/lib/mysql
      - ./frontend/db/init-mysql.sh:/docker-entrypoint-initdb.d/init-mysql.sh
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 5s
      retries: 3

  cache:
    image: memcached:latest
    restart: unless-stopped
    command: ["-m", "1024"]
    networks:
      - internal
    ports:
      - "11211:11211"

  chrome-server:
    image: selenium/standalone-chrome:112.0-chromedriver-112.0-grid-4.9.0-20230421
    shm_size: 2g
    network_mode: "host"

networks:
  internal:
  external:

volumes:
  api-bundle:
    name: ontoportal_api_bundle
    driver: local
  frontend-bundle:
  mysql-data:
  rails_cache:
  assets:
  node:
  app_ui:
